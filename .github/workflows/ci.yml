name: Cross-Platform CI/CD Pipeline

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: write

jobs:
  linux-build:
    name: Build and Test (Linux)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Create metadata files
        run: |
          echo "Quadratic equation solver" > DESCRIPTION
          echo "MIT License" > LICENSE.txt
          echo "# Solver Application" > README.md

      - name: Install dependencies
        run: sudo apt-get install -y rpm

      - name: Configure CMake
        run: cmake -B _build -DCPACK_PACKAGE_ICON=""

      - name: Build project
        run: cmake --build _build --parallel

      - name: Run solver test
        run: echo "1 -5 6" | _build/solver_application/solver_app

      - name: Archive build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: linux-build
          path: _build/
          retention-days: 1

  windows-build:
    name: Build (Windows)
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4

      - name: Create metadata files
        run: |
          echo "Quadratic equation solver" > DESCRIPTION
          echo "MIT License" > LICENSE.txt
          echo "# Solver Application" > README.md

      - name: Configure CMake
        run: cmake -B _build -DCPACK_PACKAGE_ICON=""

      - name: Build project
        run: cmake --build _build --config Release

      - name: Run solver test
        run: _build\solver_application\Release\solver_app.exe <<< "1 -5 6"

      - name: Archive build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: windows-build
          path: _build/
          retention-days: 1

  macos-build:
    name: Build (macOS)
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4

      - name: Create metadata files
        run: |
          echo "Quadratic equation solver" > DESCRIPTION
          echo "MIT License" > LICENSE.txt
          echo "# Solver Application" > README.md

      - name: Configure CMake
        run: cmake -B _build -DCPACK_PACKAGE_ICON=""

      - name: Build project
        run: cmake --build _build

      - name: Run solver test
        run: echo "1 -5 6" | _build/solver_application/solver_app

      - name: Archive build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: macos-build
          path: _build/
          retention-days: 1

  create-packages:
    name: Create Packages
    needs: [linux-build, windows-build, macos-build]
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4

      - name: Extract version from tag
        shell: bash
        run: |
          version=${GITHUB_REF#refs/tags/v}
          echo "VERSION=${version}" >> $GITHUB_ENV

      - name: Install packaging tools
        run: |
          sudo apt-get update
          sudo apt-get install -y rpm
          sudo apt-get install -y osslsigncode
          sudo apt-get install -y wine

      - name: Download Linux artifacts
        uses: actions/download-artifact@v4
        with:
          name: linux-build
          path: _build/linux

      - name: Download Windows artifacts
        uses: actions/download-artifact@v4
        with:
          name: windows-build
          path: _build/windows

      - name: Download macOS artifacts
        uses: actions/download-artifact@v4
        with:
          name: macos-build
          path: _build/macos

      - name: Generate Linux packages
        run: |
          cd _build/linux
          cpack --config CPackConfig.cmake -G "TGZ;ZIP;DEB;RPM"
          mkdir -p ../artifacts
          mv *.tar.gz *.zip *.deb *.rpm ../artifacts/

      - name: Generate Windows packages
        run: |
          cd _build/windows
          cpack --config CPackConfig.cmake -G "WIX;ZIP"
          mkdir -p ../artifacts
          mv *.msi *.zip ../artifacts/

      - name: Generate macOS packages
        run: |
          cd _build/macos
          cpack --config CPackConfig.cmake -G "TGZ;ZIP;DragNDrop"
          mkdir -p ../artifacts
          mv *.tar.gz *.zip *.dmg ../artifacts/

      - name: Upload packages
        uses: actions/upload-artifact@v4
        with:
          name: release-packages
          path: _build/artifacts/
          retention-days: 1

  create-release:
    name: Create Release
    needs: create-packages
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4

      - name: Download packages
        uses: actions/download-artifact@v4
        with:
          name: release-packages
          path: release-files

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref }}
          name: "Solver v${{ env.VERSION }}"
          body: |
            ## Solver Application v${{ env.VERSION }}

            ### Packages included:
            - Source archives: .tar.gz, .zip
            - Linux packages: .deb, .rpm
            - Windows package: .msi
            - macOS package: .dmg
          files: |
            release-files/*
          draft: false
          prerelease: false
